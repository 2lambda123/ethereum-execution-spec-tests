[tox]
env_list =
    framework
    tests
    docs

[testenv]

# flake8 insists the dictionary is called "whitelist.txt", we will create this below
wordlists = .wordlist.txt .wordlist_python_pytest.txt .wordlist_opcodes.txt

[testenv:framework]
description = Run checks on helper libraries and test framework

extras =
    test
    lint

src = src setup.py

allowlist_externals = bash

commands =
    fname8 {[testenv:framework]src}
    isort {[testenv:framework]src} --check --diff
    black {[testenv:framework]src} --check --diff
    bash -c 'cat {[testenv]wordlists} > whitelist.txt'
    flake8 {[testenv:framework]src}
    mypy {[testenv:framework]src}
    pytest -c ./pytest-framework.ini -n auto

[testenv:py3]
description = An alias for the 'framework' tox environment
deps = {[testenv:framework]deps}
extras = {[testenv:framework]extras}
allowlist_externals = {[testenv:framework]allowlist_externals}
commands = {[testenv:framework]commands}

[testenv:tests]
description = Run checks on the test cases in tests/

extras =
    test
    lint

allowlist_externals = bash

commands =
    fname8 tests
    isort tests --check --diff
    black tests --check --diff
    bash -c 'cat {[testenv]wordlists} > whitelist.txt'
    flake8 tests
    mypy tests
    pytest -n auto

[testenv:docs]
description = Run documentation checks

extras =
    lint
    docs

setenv =
    SPEC_TESTS_AUTO_GENERATE_FILES = true

src = setup.py docs/gen_test_case_reference.py

commands =
    fname8 {[testenv:docs]src}
    isort {[testenv:docs]src} --check --diff
    black {[testenv:docs]src} --check --diff
    flake8 {[testenv:docs]src}
    mypy {[testenv:docs]src}
    mkdocs build --strict

[testenv:md]
description = Lint markdown documents, see .markdownlint.yaml for rules.

allowlist_externals = 
    markdownlint-cli2

src = 
    README.md "docs/**/*.md"

commands = 
    markdownlint-cli2 {[testenv:md]src}
