"""
EOF v1 validation code
"""

import pytest
from ethereum_test_tools import EOFTestFiller
from ethereum_test_tools.eof.v1 import Container, EOFException

@pytest.mark.parametrize(
    "eof_code,expected_hex_bytecode,exception",
    [
        pytest.param(
            Container(
                name="EOF1V00001",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x03,
                        0x00,
                        0x03,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x00,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0xe5,
                        0x00,
                        0x02,
                        0x5f,
                        0x5f,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040003000304000000008000020002000000020002e3000100e500025f5fe4",
            None,
            id="jumpf_to_returning_0",
        ),
        pytest.param(
            Container(
                name="EOF1V00002",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x05,
                        0x00,
                        0x03,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x5f,
                        0x5f,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040005000304000000008000020002000200020002e30001005f5fe500025f5fe4",
            EOFException.STACK_HIGHER_THAN_OUTPUTS,
            id="jumpf_to_returning_1",
        ),
        pytest.param(
            Container(
                name="EOF1V00003",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x06,
                        0x00,
                        0x02,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x03,
                        0x03,
                        0x02,
                        0x00,
                        0x03,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x50,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040006000204000000008000020002000303020003e30001005f5f5fe5000250e4",
            None,
            id="jumpf_to_returning_2",
        ),
        pytest.param(
            Container(
                name="EOF1V00004",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x07,
                        0x00,
                        0x02,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x04,
                        0x03,
                        0x02,
                        0x00,
                        0x03,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x50,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040007000204000000008000020002000403020003e30001005f5f5f5fe5000250e4",
            EOFException.STACK_HIGHER_THAN_OUTPUTS,
            id="jumpf_to_returning_3",
        ),
        pytest.param(
            Container(
                name="EOF1V00005",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x05,
                        0x00,
                        0x02,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x03,
                        0x02,
                        0x00,
                        0x03,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x50,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040005000204000000008000020002000203020003e30001005f5fe5000250e4",
            EOFException.STACK_UNDERFLOW,
            id="jumpf_to_returning_4",
        ),
        pytest.param(
            Container(
                name="EOF1V00006",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x04,
                        0x00,
                        0x02,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x01,
                        0x00,
                        0x01,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x5f,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040004000204000000008000020002000100010001e30001005fe500025fe4",
            None,
            id="jumpf_to_returning_5",
        ),
        pytest.param(
            Container(
                name="EOF1V00007",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x06,
                        0x00,
                        0x02,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x01,
                        0x00,
                        0x01,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x5f,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040006000204000000008000020002000300010001e30001005f5f5fe500025fe4",
            EOFException.STACK_HIGHER_THAN_OUTPUTS,
            id="jumpf_to_returning_6",
        ),
        pytest.param(
            Container(
                name="EOF1V00008",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x03,
                        0x00,
                        0x02,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x00,
                        0x00,
                        0x01,
                        0x00,
                        0x01,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0xe5,
                        0x00,
                        0x02,
                        0x5f,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040003000204000000008000020002000000010001e3000100e500025fe4",
            EOFException.STACK_UNDERFLOW,
            id="jumpf_to_returning_7",
        ),
        pytest.param(
            Container(
                name="EOF1V00009",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x07,
                        0x00,
                        0x03,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x04,
                        0x03,
                        0x01,
                        0x00,
                        0x03,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x50,
                        0x50,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040007000304000000008000020002000403010003e30001005f5f5f5fe500025050e4",
            None,
            id="jumpf_to_returning_8",
        ),
        pytest.param(
            Container(
                name="EOF1V00010",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x08,
                        0x00,
                        0x03,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x05,
                        0x03,
                        0x01,
                        0x00,
                        0x03,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0x5f,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x50,
                        0x50,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040008000304000000008000020002000503010003e30001005f5f5f5f5fe500025050e4",
            EOFException.STACK_HIGHER_THAN_OUTPUTS,
            id="jumpf_to_returning_9",
        ),
        pytest.param(
            Container(
                name="EOF1V00011",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x0c,
                        0x02,
                        0x00,
                        0x03,
                        0x00,
                        0x04,
                        0x00,
                        0x06,
                        0x00,
                        0x03,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x02,
                        0x00,
                        0x02,
                        0x00,
                        0x03,
                        0x03,
                        0x01,
                        0x00,
                        0x03,
                        0xe3,
                        0x00,
                        0x01,
                        0x00,
                        0x5f,
                        0x5f,
                        0x5f,
                        0xe5,
                        0x00,
                        0x02,
                        0x50,
                        0x50,
                        0xe4,

                     ]),
            ),
            "0xef000101000c02000300040006000304000000008000020002000303010003e30001005f5f5fe500025050e4",
            EOFException.STACK_UNDERFLOW,
            id="jumpf_to_returning_10",
        ),
        
    ]
)

def test_example_valid_invalid(
    eof_test: EOFTestFiller,
    eof_code: Container,
    expected_hex_bytecode: str,
    exception: EOFException | None,
):
    """
    Verify eof container construction and exception
    """
    if expected_hex_bytecode[0:2] == "0x":
        expected_hex_bytecode = expected_hex_bytecode[2:]
    assert bytes(eof_code) == bytes.fromhex(expected_hex_bytecode)

    eof_test(
        data=eof_code,
        expect_exception=exception,
    )
