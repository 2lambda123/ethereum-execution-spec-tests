"""
EOF v1 validation code
"""

import pytest
from ethereum_test_tools import EOFTestFiller
from ethereum_test_tools.eof.v1 import Container, EOFException

@pytest.mark.parametrize(
    "eof_code,expected_hex_bytecode,exception",
    [
        pytest.param(
            Container(
                name="EOF1V00001",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x20,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0x00,
                        0x00,
                        0x50,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,

                     ]),
            ),
            "0xef000101000402000100050400200000800001d1000050000000000000000000111111111111111122222222222222223333333333333333",
            None,
            id="dataloadn_0",
        ),
        pytest.param(
            Container(
                name="EOF1V00002",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x21,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0x00,
                        0x01,
                        0x50,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x44,

                     ]),
            ),
            "0xef000101000402000100050400210000800001d100015000000000000000000011111111111111112222222222222222333333333333333344",
            None,
            id="dataloadn_1",
        ),
        pytest.param(
            Container(
                name="EOF1V00003",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x40,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0x00,
                        0x20,
                        0x50,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,

                     ]),
            ),
            "0xef000101000402000100050400400000800001d10020500000000000000000001111111111111111222222222222222233333333333333330000000000000000111111111111111122222222222222223333333333333333",
            None,
            id="dataloadn_2",
        ),
        pytest.param(
            Container(
                name="EOF1V00004",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0x00,
                        0x00,
                        0x50,
                        0x00,

                     ]),
            ),
            "0xef000101000402000100050400000000800001d100005000",
            EOFException.INVALID_DATALOADN_INDEX,
            id="dataloadn_3",
        ),
        pytest.param(
            Container(
                name="EOF1V00005",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x01,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0x00,
                        0x01,
                        0x50,
                        0x00,
                        0x00,

                     ]),
            ),
            "0xef000101000402000100050400010000800001d10001500000",
            EOFException.INVALID_DATALOADN_INDEX,
            id="dataloadn_4",
        ),
        pytest.param(
            Container(
                name="EOF1V00006",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x20,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0x00,
                        0x20,
                        0x50,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,

                     ]),
            ),
            "0xef000101000402000100050400200000800001d1002050000000000000000000111111111111111122222222222222223333333333333333",
            EOFException.INVALID_DATALOADN_INDEX,
            id="dataloadn_5",
        ),
        pytest.param(
            Container(
                name="EOF1V00007",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x20,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0xff,
                        0xff,
                        0x50,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,

                     ]),
            ),
            "0xef000101000402000100050400200000800001d1ffff50000000000000000000111111111111111122222222222222223333333333333333",
            EOFException.INVALID_DATALOADN_INDEX,
            id="dataloadn_6",
        ),
        pytest.param(
            Container(
                name="EOF1V00008",
                raw_bytes=bytes(
                     [
                        0xef,
                        0x00,
                        0x01,
                        0x01,
                        0x00,
                        0x04,
                        0x02,
                        0x00,
                        0x01,
                        0x00,
                        0x05,
                        0x04,
                        0x00,
                        0x3f,
                        0x00,
                        0x00,
                        0x80,
                        0x00,
                        0x01,
                        0xd1,
                        0x00,
                        0x20,
                        0x50,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x00,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x11,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x22,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,
                        0x33,

                     ]),
            ),
            "0xef0001010004020001000504003f0000800001d100205000000000000000000011111111111111112222222222222222333333333333333300000000000000001111111111111111222222222222222233333333333333",
            EOFException.INVALID_DATALOADN_INDEX,
            id="dataloadn_7",
        ),
        
    ]
)

def test_example_valid_invalid(
    eof_test: EOFTestFiller,
    eof_code: Container,
    expected_hex_bytecode: str,
    exception: EOFException | None,
):
    """
    Verify eof container construction and exception
    """
    if expected_hex_bytecode[0:2] == "0x":
        expected_hex_bytecode = expected_hex_bytecode[2:]
    assert bytes(eof_code) == bytes.fromhex(expected_hex_bytecode)

    eof_test(
        data=eof_code,
        expect_exception=exception,
    )
