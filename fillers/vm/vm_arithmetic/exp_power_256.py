"""
Test the result of 255**n, 256**n, and 257**n for 0<=n<=33
"""

from ethereum_test_tools import (
    Account,
    Environment,
    StateTest,
    TestAddress,
    Transaction,
    Yul,
    test_from,
    to_address,
)


@test_from("shanghai")
def test_exp_power_256(fork):
    """
    Test Exp Opcode for 255-257**n.
    Port from ethereum/tests:
      - GeneralStateTestsFiller/VMTests/vmTest/expPower256Filler.yml
      - Original test by Ori Pomerantz qbzzt1@gmail.com
    """
    env = Environment()

    pre = {
        to_address(0x100): Account(
            balance=0x0BA1A9CE0BA1A9CE,
            code=Yul(
                """
                {
                    let n := 0
                    for { } lt(n, 34) { }
                    {
                        sstore(mul(0x10, n), exp(256, n))
                        sstore(add(mul(0x10, n), 1), exp(255, n))
                        sstore(add(mul(0x10, n), 2), exp(257, n))
                        n := add(n, 1)
                    }
                }
                """
            ),
        ),
        TestAddress: Account(balance=0x0BA1A9CE0BA1A9CE),
    }

    tx = Transaction(
        nonce=0,
        to=to_address(0x100),
        gas_limit=5000000,
        gas_price=10,
    )

    post = {
        to_address(0x100): Account(
            storage={
                # 0x10*n:   256^n
                # 0x10*n+1: 255^n
                # 0x10*n+2: 257^n
                0x00: 0x01,
                0x01: 0x01,
                0x02: 0x01,
                0x10: 0x0100,
                0x11: 0xFF,
                0x12: 0x0101,
                0x20: 0x010000,
                0x21: 0xFE01,
                0x22: 0x010201,
                0x30: 0x01000000,
                0x31: 0xFD02FF,
                0x32: 0x01030301,
                0x40: 0x0100000000,
                0x41: 0xFC05FC01,
                0x42: 0x0104060401,
                0x50: 0x010000000000,
                0x51: 0xFB09F604FF,
                0x52: 0x01050A0A0501,
                0x60: 0x01000000000000,
                0x61: 0xFA0EEC0EFA01,
                0x62: 0x01060F140F0601,
                0x70: 0x0100000000000000,
                0x71: 0xF914DD22EB06FF,
                0x72: 0x0107152323150701,
                0x80: 0x010000000000000000,
                0x81: 0xF81BC845C81BF801,
                0x82: 0x01081C3846381C0801,
                0x90: 0x01000000000000000000,
                0x91: 0xF723AC7D8253DC08FF,
                0x92: 0x010924547E7E54240901,
                0xA0: 0x0100000000000000000000,
                0xA1: 0xF62C88D104D1882CF601,
                0xA2: 0x010A2D78D2FCD2782D0A01,
                0xB0: 0x010000000000000000000000,
                0xB1: 0xF5365C4833CCB6A4C90AFF,
                0xB2: 0x010B37A64BCFCF4AA5370B01,
                0xC0: 0x01000000000000000000000000,
                0xC1: 0xF44125EBEB98E9EE2441F401,
                0xC2: 0x010C42DDF21B9F19EFDC420C01,
                0xD0: 0x0100000000000000000000000000,
                0xD1: 0xF34CE4C5FFAD5104361DB20CFF,
                0xD2: 0x010D4F20D00DBAB909CC1E4E0D01,
                0xE0: 0x010000000000000000000000000000,
                0xE1: 0xF25997E139ADA3B331E7945AF201,
                0xE2: 0x010E5C6FF0DDC873C2D5EA6C5B0E01,
                0xF0: 0x01000000000000000000000000000000,
                0xF1: 0xF1673E495873F60F7EB5ACC6970EFF,
                0xF2: 0x010F6ACC60CEA63C3698C056C7690F01,
                0x0100: 0x0100000000000000000000000000000000,
                0x0101: 0xF075D70B0F1B82196F36F719D077F001,
                0x0102: 0x01107A372D2F74E272CF59171E30781001,
                0x0110: 0x010000000000000000000000000000000000,
                0x0111: 0xEF856134040C669755C7C022B6A77810FF,
                0x0112: 0x01118AB1645CA45755422870354EA8881101,
                0x0120: 0x01000000000000000000000000000000000000,
                0x0121: 0xEE95DBD2D0085A30BE71F86293F0D098EE01,
                0x0122: 0x01129C3C15C100FBAC976A98A583F730991201,
                0x0130: 0x0100000000000000000000000000000000000000,
                0x0131: 0xEDA745F6FD3851D68DB3866A315CDFC85512FF,
                0x0132: 0x0113AED851D6C1FCA84402033E297B27C9AB1301,
                0x0140: 0x010000000000000000000000000000000000000000,
                0x0141: 0xECB99EB1063B1984B725D2E3C72B82E88CBDEC01,
                0x0142: 0x0114C2872A2898BEA4EC46054167A4A2F174BE1401,
                0x0150: 0x01000000000000000000000000000000000000000000,
                0x0151: 0xEBCCE5125534DE6B326EAD10E3645765A4312E14FF,
                0x0152: 0x0115D749B152C1576391324B46A90C47946632D21501,
                0x0160: 0x0100000000000000000000000000000000000000000000,
                0x0161: 0xEAE1182D42DFA98CC73C3E63D280F30E3E8CFCE6EA01,
                0x0162: 0x0116ED20FB041418BAF4C37D91EFB553DBFA9904E71601,
                0x0170: 0x010000000000000000000000000000000000000000000000,
                0x0171: 0xE9F63715159CC9E33A7502256EAE721B304E6FEA0316FF,
                0x0172: 0x0118040E1BFF182CD3AFB8410F81A5092FD6939DEBFD1701,
                0x0180: 0x01000000000000000000000000000000000000000000000000,
                0x0181: 0xE90C40DE00872D19573A8D23493FC3A9151E217A1913E801,
                0x0182: 0x01191C122A1B1745008367F9509126AE39066A3189E9141801,
                0x0190: 0x0100000000000000000000000000000000000000000000000000,
                0x0191: 0xE823349D2286A5EC3DE3529625F683E56C0903589EFAD418FF,
                0x0192: 0x011A352E3C45325C4583EB6149E1B7D4E73F709BBB72FD2C1901,
                0x01A0: 0x010000000000000000000000000000000000000000000000000000,
                0x01A1: 0xE73B116885641F4651A56F438FD08D61869CFA55465BD944E601,
                0x01A2: 0x011B4F636A81778EA1C96F4CAB2B998CBC26B00C572E7029451A01,
                0x01B0: 0x01000000000000000000000000000000000000000000000000000000,
                0x01B1: 0xE653D6571CDEBB270B53C9D44C40BCD425165D5AF1157D6BA11AFF,
                0x01B2: 0x011C6AB2CDEBF906306B38BBF7D6C52648E2D6BC63859E996E5F1B01,
                0x01C0: 0x0100000000000000000000000000000000000000000000000000000000,
                0x01C1: 0xE56D8280C5C1DC6BE448760A77F47C1750F146FD962467EE3579E401,
                0x01C2: 0x011D871D80B9E4FF369BA3F4B3CE9BEB6F2BB9931FE9243807CD7A1C01,
                0x01D0: 0x010000000000000000000000000000000000000000000000000000000000,
                0x01D1: 0xE48814FE44FC1A8F78642D946D7C879B39A055B6988E438647446A1CFF,
                0x01D2: 0x011EA4A49E3A9EE435D23F98A8826A875A9AE54CB3090D5C3FD547961D01,
                0x01E0: 0x01000000000000000000000000000000000000000000000000000000000000,
                0x01E1: 0xE3A38CE946B71E74E8EBC966D90F0B139E66B560E1F5B542C0FD25B2E201,
                0x01E2: 0x011FC34942D8D9831A0811D8412AECF1E1F58031FFBC16699C151CDDB31E01,
                0x01F0: 0x0100000000000000000000000000000000000000000000000000000000000000,
                0x01F1: 0xE2BFE95C5D7067567402DD9D7235FC088AC84EAB8113BF8D7E3C288D2F1EFF,
                0x01F2: 0x0120E30C8C1BB25C9D2219EA196C17DED3D775B231BBD28005B131FA90D11F01,
                0x0200: 0x0000000000000000000000000000000000000000000000000000000000000000,
                0x0201: 0xE1DD29730112F6EF1D8EDABFD4C3C60C823D865CD592ABCDF0BDEC64A1EFE001,
                0x0202: 0x2203EF98A7CE0EF9BF3C04038583F6B2AB4D27E3ED8E5285B6E32C8B61F02001,
                0x0210: 0x0000000000000000000000000000000000000000000000000000000000000000,
                0x0211: 0xFB4C498E11E3F82E714BE514EF024675BB48D678BD192222CD2E783D4DF020FF,
                0x0212: 0x25F3884075DD08B8FB400789097AA95DF8750BD17BE0D83C9A0FB7ED52102101,
            }
        )
    }

    yield StateTest(env=env, pre=pre, post=post, txs=[tx])
